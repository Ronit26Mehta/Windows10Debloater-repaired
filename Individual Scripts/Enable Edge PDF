Write-Host "Setting Edge back to default" -ForegroundColor Cyan

# Define registry paths with properties to remove
$registrySettings = @(
    @{
        Path = "HKCR:\.pdf"
        Properties = @("NoOpenWith", "NoStaticDefaultVerb")
    },
    @{
        Path = "HKCR:\.pdf\OpenWithProgids"
        Properties = @("NoOpenWith", "NoStaticDefaultVerb")
    },
    @{
        Path = "HKCR:\.pdf\OpenWithList"
        Properties = @("NoOpenWith", "NoStaticDefaultVerb")
    }
)

foreach ($item in $registrySettings) {
    $path = $item.Path
    foreach ($prop in $item.Properties) {
        try {
            # Check if the property exists by attempting to retrieve it.
            $propValue = Get-ItemProperty -Path $path -Name $prop -ErrorAction Stop
            if ($null -ne $propValue) {
                Remove-ItemProperty -Path $path -Name $prop -Force -ErrorAction Stop
                Write-Host "Removed property '$prop' from $path" -ForegroundColor Green
            }
        }
        catch {
            Write-Host "Property '$prop' not found in $path or removal error: $_" -ForegroundColor Yellow
        }
    }
}

# Rename the registry key to remove the trailing underscore
$oldEdgeKey = "HKCR:\AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_"
$newEdgeName = "AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723"

if (Test-Path $oldEdgeKey) {
    try {
        Rename-Item -Path $oldEdgeKey -NewName $newEdgeName -Force -ErrorAction Stop
        Write-Host "Renamed key '$oldEdgeKey' to remove underscore" -ForegroundColor Green
    }
    catch {
        Write-Host "Error renaming key '$oldEdgeKey': $_" -ForegroundColor Red
    }
}
else {
    Write-Host "Registry key '$oldEdgeKey' does not exist" -ForegroundColor Yellow
}
